1
00:00:00,300 --> 00:00:07,080
Hello and welcome to this lecture, but we are going to start with the implementation of this bar's

2
00:00:07,080 --> 00:00:09,000
optical flow algorithm.

3
00:00:09,360 --> 00:00:19,110
We are back to our bicarb project and I will create a new file by file and the name will be.

4
00:00:20,280 --> 00:00:24,470
Go below, surpass one.

5
00:00:24,840 --> 00:00:30,900
We are going to perform two tests using this algorithm in the first one.

6
00:00:31,140 --> 00:00:40,260
We will get the initial coroners regarding the first frame of the video and the second experiment.

7
00:00:40,500 --> 00:00:44,820
We will select the objects that we want to track.

8
00:00:45,510 --> 00:00:57,180
Let's first imports the libraries import mobile by S and B, and also in Part C ritual, which is open

9
00:00:57,180 --> 00:00:58,550
c v o.

10
00:00:58,610 --> 00:01:05,880
We will create a new variable called Cap C Ritual Video Capture.

11
00:01:06,120 --> 00:01:11,040
We are going to reads as you do instead of using the web cam.

12
00:01:11,550 --> 00:01:18,330
I'm going to access the videos folder walking dots a VI.

13
00:01:18,630 --> 00:01:25,260
It is this file here that we have use to test other algorithms.

14
00:01:25,530 --> 00:01:29,040
And the first step is to define the parameters.

15
00:01:29,340 --> 00:01:32,730
I will create a new variable barometers.

16
00:01:33,270 --> 00:01:39,660
She will magazine and the name of the variable is related.

17
00:01:39,680 --> 00:01:49,980
Should these calculations here to get the art score to generate the initial border and edges that were

18
00:01:49,980 --> 00:01:51,870
detected in the image.

19
00:01:52,530 --> 00:02:01,260
This is why it is important to understand this basic intuition about optical flow because we need to

20
00:02:01,260 --> 00:02:03,420
use them in the implementation.

21
00:02:03,930 --> 00:02:13,860
We will define this variable in the format of a dictionary, and the first parameter is Max Gardner's

22
00:02:14,550 --> 00:02:16,620
equals 100.

23
00:02:17,010 --> 00:02:26,610
As the name suggests, it is the number of corners that you want to detect in the initial frame of the

24
00:02:26,610 --> 00:02:27,240
video.

25
00:02:27,630 --> 00:02:37,740
We are specifying 100 coroners the higher this value, the more objects the algorithm will track.

26
00:02:38,010 --> 00:02:44,250
After this lecture, you can play with this parameter in order to see the results.

27
00:02:44,910 --> 00:02:53,220
Then next one is the quality level equals zero point three.

28
00:02:53,490 --> 00:03:02,730
And as the name suggests, it is the quality of the corners that will be detected when the algorithm

29
00:03:02,730 --> 00:03:03,300
runs.

30
00:03:03,630 --> 00:03:14,400
It will detect 100 coroners, but not all coroners will be used during this equation of the algorithm

31
00:03:14,850 --> 00:03:25,170
because we will filter only the best corners that were detected and the quality level will feel 30 gardeners

32
00:03:25,470 --> 00:03:28,380
should drink only the best ones.

33
00:03:28,980 --> 00:03:35,670
When the algorithm runs, each one of the coroners will have ice cart.

34
00:03:36,060 --> 00:03:38,400
They hire or discard the.

35
00:03:38,790 --> 00:03:48,900
There is the quality of the car that was detected, and the algorithm will use the best score to fill

36
00:03:49,230 --> 00:03:50,040
the orders.

37
00:03:50,310 --> 00:03:53,160
Let's suppose that's the best.

38
00:03:53,160 --> 00:03:59,190
Coroner has to score one thousand and five hundred.

39
00:03:59,610 --> 00:04:12,060
Then we can multiply the best coroner by the quality level 1000 and 500 times zero point three.

40
00:04:12,570 --> 00:04:16,230
The result is four hundred and fifty.

41
00:04:16,410 --> 00:04:28,200
So it means that the coroners which have this quiet less than four hundred and fifty will be discarded.

42
00:04:28,590 --> 00:04:30,780
They want to be used in.

43
00:04:30,780 --> 00:04:35,150
There is a crucial of the algorithm, the algorithm.

44
00:04:35,160 --> 00:04:40,590
We always start with one hundred coroner's words.

45
00:04:40,830 --> 00:04:45,840
A filter will be applied according to the quality level.

46
00:04:46,200 --> 00:04:58,350
Let's suppose that when coroners have this car less than 450, all this do I need coroners will be discarded.

47
00:04:58,590 --> 00:04:59,130
So.

48
00:04:59,420 --> 00:05:08,630
We will keep only a Dick Gardner's in order to execute all of the algorithm until the end of the video.

49
00:05:09,080 --> 00:05:13,550
And the last barometer is the mean distance.

50
00:05:13,970 --> 00:05:16,340
It will be equal to seven.

51
00:05:16,700 --> 00:05:22,790
We can open this people image here and this barometer.

52
00:05:23,060 --> 00:05:33,080
We will respect a distance of seven units are seven big cells considering bullets that are close to

53
00:05:33,080 --> 00:05:33,920
each other.

54
00:05:34,190 --> 00:05:43,190
For example, a corner may be detected in this part of the image where I am blinding the mouse and the

55
00:05:43,190 --> 00:05:47,360
next corner must be detected.

56
00:05:47,360 --> 00:05:52,970
Seven big cells should be left to the right, up or down.

57
00:05:53,480 --> 00:06:04,070
It is the distance of the closest edge, so there must be a distance of seven pixels between the detected

58
00:06:04,070 --> 00:06:04,820
edges.

59
00:06:05,180 --> 00:06:12,470
And we are using number seven because it is recommended on the documentation of Open Sydney.

60
00:06:12,980 --> 00:06:25,640
Now let's create another variable barometers Lucas carbonate another dictionary and as we can see here

61
00:06:25,640 --> 00:06:27,770
on the issue, is light.

62
00:06:28,160 --> 00:06:38,510
We are defining the parameters considering the K l the methods which uses the concept of pyramids.

63
00:06:39,230 --> 00:06:49,940
The first parameter window size equals 50 by 50, which indicates this size of the pyramids.

64
00:06:50,300 --> 00:06:56,300
For example, we can multiply 15 times 15.

65
00:06:56,690 --> 00:07:00,290
The result is two hundred and twenty five.

66
00:07:00,650 --> 00:07:09,050
It means that the minimum size of the pyramids will be 200 and 25 pixels.

67
00:07:09,500 --> 00:07:16,270
And again, this is at the full perimeter extracted from the documentation of Open City.

68
00:07:17,280 --> 00:07:22,250
The next one Max Lavell, equals chew.

69
00:07:22,640 --> 00:07:33,710
It is the levels of the pyramids in this image that are one two three four levels, and we are defining

70
00:07:33,740 --> 00:07:44,960
our pyramids with only two levels and the last one criteria equals and now we are going to use the same

71
00:07:44,960 --> 00:07:51,750
parameters we used for the other algorithms to reach richer therm for it.

72
00:07:51,770 --> 00:08:01,180
Darya Yes, and spiritual therm criteria counts.

73
00:08:01,730 --> 00:08:07,790
Now let's specify the values then and zero point zero three.

74
00:08:08,420 --> 00:08:16,400
Both parameters will be used to indicate when the algorithm will finish the equation.

75
00:08:16,850 --> 00:08:24,950
Just a reminder that's the first parameter is how many times the algorithm will run.

76
00:08:25,310 --> 00:08:35,330
If you set a higher number here, the algorithm will take a longer time to execute, but the results

77
00:08:35,330 --> 00:08:36,140
may be bad.

78
00:08:36,620 --> 00:08:45,500
And regarding this second parameter, it will indicate how sensible the algorithm is related to the

79
00:08:45,500 --> 00:08:47,420
changes of the object.

80
00:08:47,660 --> 00:08:55,880
For example, if in the current frame the object is close to the camera and in the next frame, the

81
00:08:55,880 --> 00:08:58,460
object is fired from the camera.

82
00:08:58,820 --> 00:09:09,470
If you set higher values here, the algorithm will have difficulty in tracking the object when it quickly

83
00:09:09,470 --> 00:09:11,330
changes its position.

84
00:09:11,780 --> 00:09:18,080
And if you set a small value, d'algÃ©rie can detect changes easily.

85
00:09:18,320 --> 00:09:25,880
So you may try this parameter according to the type of video that you are working with.

86
00:09:26,210 --> 00:09:37,520
Let's create the colors variable and be thought random rounds, and we are going to generate values

87
00:09:37,520 --> 00:09:45,320
from zero choo choo hundred and fifty five, which is the range of the RGV formats.

88
00:09:45,710 --> 00:09:56,960
And as we are going to detect 100 coroners in the first frame of the video, we are going to generate

89
00:09:57,170 --> 00:09:59,140
100 red.

90
00:09:59,720 --> 00:10:09,170
Numbers and when we are working with the average B caller space that are three channels, one channel

91
00:10:09,170 --> 00:10:17,300
for our one Channel, four G and one channel for B, for this reason, we need chalkboards.

92
00:10:17,330 --> 00:10:18,710
Number three here.

93
00:10:18,950 --> 00:10:26,840
So we are going to generate random numbers, 100 rows and three callers.

94
00:10:27,050 --> 00:10:29,870
We can take a look at this variable.

95
00:10:30,140 --> 00:10:35,900
Let's sprint and B, but shape koalas.

96
00:10:37,090 --> 00:10:44,560
Run, Ron discords, let's just correct to hear you, Captur run again.

97
00:10:45,220 --> 00:10:48,310
Another typo here crans.

98
00:10:50,110 --> 00:10:57,640
We can't see that's a matrix was generated one hundred rows and three Carlos.

99
00:10:58,000 --> 00:11:09,340
We can also brands these variable variants while others run again, and we can see here the random colors

100
00:11:09,340 --> 00:11:19,120
that were generated because each one of the detected cardinals will have a different random color,

101
00:11:19,330 --> 00:11:22,330
so it will be easier to see their results.

102
00:11:22,990 --> 00:11:29,980
Let's sports both quotes requirements, and we'll create or key variable.

103
00:11:30,280 --> 00:11:40,780
And also the first frame of the video cap that reads this code here is just loading the video.

104
00:11:41,140 --> 00:11:49,480
While this other one is copy should refrain variable the first frame of the video.

105
00:11:49,870 --> 00:11:59,920
Now we need to convert this frame to Grayscale because it is recommended for this algorithm to convert

106
00:11:59,920 --> 00:12:03,790
the RGV image to a grayscale image.

107
00:12:04,060 --> 00:12:06,700
So the processing will be faster.

108
00:12:07,090 --> 00:12:17,890
I will create frame rate variable frame gray in it, which means the first frame of the video Syfy.

109
00:12:17,980 --> 00:12:18,390
Sure.

110
00:12:18,910 --> 00:12:21,400
But Syfy decoder?

111
00:12:22,240 --> 00:12:23,620
Let's both here.

112
00:12:23,920 --> 00:12:34,480
The frame the region, the one in the RTP formats spiritual color b g are too great.

113
00:12:34,780 --> 00:12:39,550
We can also take a look at the first frame switcher.

114
00:12:39,880 --> 00:12:48,010
I am sure the title of the window in its frame and let's pause here.

115
00:12:48,310 --> 00:12:55,210
Frame gray in its signature way to key and the zero here.

116
00:12:55,810 --> 00:12:57,580
Let's run this code.

117
00:12:58,540 --> 00:13:01,150
We can take a look at this window.

118
00:13:01,450 --> 00:13:06,400
This is the initial frame, the first frame of the video.

119
00:13:06,670 --> 00:13:16,720
And now the goal is to use the optical flow algorithm should back to the borders and the corners of

120
00:13:16,720 --> 00:13:21,360
these initial frame after detecting the coroner's van.

121
00:13:21,550 --> 00:13:30,400
We will go through each one of the frames of the video in order to track each one of the corners that

122
00:13:30,400 --> 00:13:31,690
were detected.

123
00:13:32,200 --> 00:13:36,490
Now let's move on to the last part of this lecture.

124
00:13:36,910 --> 00:13:47,770
I will create edges variable civic, sure, and there is a function from Open V, which is called What

125
00:13:48,490 --> 00:13:50,920
Features Should Track?

126
00:13:51,520 --> 00:13:56,050
And let's send as parameter the initial frame.

127
00:13:56,560 --> 00:14:00,490
The order parameter mask equals none.

128
00:14:00,970 --> 00:14:09,940
Later, we will see more details about the mask and the last parameter we need to send the here parameters

129
00:14:10,000 --> 00:14:11,040
sheet doma's.

130
00:14:11,470 --> 00:14:17,680
We have max corners, the quality level and the minimum distance.

131
00:14:17,950 --> 00:14:22,030
So this is the initialization of the algorithm.

132
00:14:22,390 --> 00:14:31,600
We said to the parameters we sand's the initial frame of the video, and as a result, we will get to

133
00:14:31,600 --> 00:14:36,640
the corners or the edges that were detected by the algorithm.

134
00:14:37,210 --> 00:14:45,790
This first part of the calculation will be done to detect the and there's just a reminder that's the

135
00:14:45,790 --> 00:14:49,480
Harris corner detector is being used.

136
00:14:49,870 --> 00:14:58,870
Now we can't Brandt's length edges just to see how many edges were detected.

137
00:14:59,350 --> 00:15:07,650
Thirty eight edges if we try to use another video, for example, the race.

138
00:15:07,930 --> 00:15:18,910
But and before, let's change here and run this code again, see that the 100 corners were detected

139
00:15:19,240 --> 00:15:22,120
according to this parameter here.

140
00:15:22,420 --> 00:15:31,990
And let's change again should they walk in video only thirty eight corners were detected because the

141
00:15:31,990 --> 00:15:41,110
quality of the order corners that were detected were not so good, according to the quality level.

142
00:15:41,530 --> 00:15:49,160
So we can conclude that the corners detect this in the race video were bad there.

143
00:15:49,360 --> 00:15:57,870
Then the corners detected only walking with you and you can't drive change this parameter, for example.

144
00:15:58,360 --> 00:16:01,810
Zero point one Let's run again.

145
00:16:02,080 --> 00:16:11,080
See that when we decrease, the quality we get adds more points to track and we keep that same value.

146
00:16:11,620 --> 00:16:20,020
Zero point three And after we see the results, you can try to play with this parameter in order to

147
00:16:20,020 --> 00:16:22,510
see more or less corners.

148
00:16:23,230 --> 00:16:30,190
Now we can grant the edges just to see the values run this code again.

149
00:16:30,670 --> 00:16:41,950
Take a look that we have thirty eight points and the first value means the x axis and the second value

150
00:16:42,160 --> 00:16:44,240
means the y axis.

151
00:16:44,650 --> 00:16:54,070
In short, both values are related to the position of the corners that were detected in the first frame

152
00:16:54,070 --> 00:16:57,040
of the video in the next lecture.

153
00:16:57,340 --> 00:17:04,119
We will use all these third eight edges show stars our algorithm.

154
00:17:04,450 --> 00:17:13,900
They will be the initialization of the algorithm and then we will see if we can continue tracking all

155
00:17:13,900 --> 00:17:14,890
these points.

156
00:17:15,339 --> 00:17:25,480
We need one more variable mask, which will be equal to and p zeros like.

157
00:17:25,839 --> 00:17:31,660
And now we specify here the frame we can brands and bid.

158
00:17:32,260 --> 00:17:37,060
But Shape Mask, let's run this code.

159
00:17:37,840 --> 00:17:39,240
Take a look here.

160
00:17:39,250 --> 00:17:45,430
That's these are the dimensions of the first frame of the video.

161
00:17:45,790 --> 00:17:53,710
They weight if they're high and then the number of channels as we have our G B video that our three

162
00:17:53,710 --> 00:17:57,430
channels one channel for each one of the callers.

163
00:17:58,030 --> 00:18:10,990
And we can also Korean's the mask run this code, see that we have a matrix composed of all these zeros

164
00:18:11,380 --> 00:18:22,150
when we are working with the IGB formats, value zero is related to the black color, while value two

165
00:18:22,150 --> 00:18:26,860
hundred and fifty five is related to the yellow color.

166
00:18:27,370 --> 00:18:34,540
Later on, we are going to use the mask variable, so it will be easier to understand.

167
00:18:34,690 --> 00:18:43,600
And the next lecture, we are going through each one of the frames of the video in order to track their

168
00:18:43,600 --> 00:18:46,630
initial partners that were detected.

169
00:18:47,050 --> 00:18:47,740
See you there!

